---
- hosts: db
  connection: local
  #become: no
  gather_facts: False
  tasks:
    - name: Walk through the setup dialog 1 (Enter 'root' username)
      community.vmware.vmware_guest_sendkey:
        hostname: "{{ Target.vCenter.FQDN }}"
        username: "{{ Target.vCenter.User }}"
        password: "{{ Common.Password.Physical }}" 
        validate_certs: no
        name: "{{ inventory_hostname }}"
        string_send: "root"
              
    - name: Press 'ENTER'
      community.vmware.vmware_guest_sendkey:
        hostname: "{{ Target.vCenter.FQDN }}"
        username: "{{ Target.vCenter.User }}"
        password: "{{ Common.Password.Physical }}" 
        validate_certs: no
        name: "{{ inventory_hostname }}"
        keys_send:
          - ENTER 

    - name: Walk through the setup dialog 1 (Enter 'root' username)
      community.vmware.vmware_guest_sendkey:
        hostname: "{{ Target.vCenter.FQDN }}"
        username: "{{ Target.vCenter.User }}"
        password: "{{ Common.Password.Physical }}" 
        validate_certs: no
        name: "{{ inventory_hostname }}"
        string_send: "VMware1!VMware1!"
              
    - name: Press 'ENTER'
      community.vmware.vmware_guest_sendkey:
        hostname: "{{ Target.vCenter.FQDN }}"
        username: "{{ Target.vCenter.User }}"
        password: "{{ Common.Password.Physical }}" 
        validate_certs: no
        name: "{{ inventory_hostname }}"
        keys_send:
          - ENTER 
    #- name: Wait 1 seconds
    #  ansible.builtin.pause:
    #    seconds: 1


    - name: Install httpd
      community.vmware.vmware_guest_sendkey:
        hostname: "{{ Target.vCenter.FQDN }}"
        username: "{{ Target.vCenter.User }}"
        password: "{{ Common.Password.Physical }}" 
        validate_certs: no
        name: "{{ inventory_hostname }}"
        string_send: "tdnf install httpd"

    #- name: Wait 1 seconds
    #  ansible.builtin.pause:
    #    seconds: 1

    - name: Press 'ENTER'
      community.vmware.vmware_guest_sendkey:
        hostname: "{{ Target.vCenter.FQDN }}"
        username: "{{ Target.vCenter.User }}"
        password: "{{ Common.Password.Physical }}" 
        validate_certs: no
        name: "{{ inventory_hostname }}"
        keys_send:
          - ENTER 

    - name: Enter Y to Question
      community.vmware.vmware_guest_sendkey:
        hostname: "{{ Target.vCenter.FQDN }}"
        username: "{{ Target.vCenter.User }}"
        password: "{{ Common.Password.Physical }}" 
        validate_certs: no
        name: "{{ inventory_hostname }}"
        string_send: "Y"
              
    - name: Press 'ENTER'
      community.vmware.vmware_guest_sendkey:
        hostname: "{{ Target.vCenter.FQDN }}"
        username: "{{ Target.vCenter.User }}"
        password: "{{ Common.Password.Physical }}" 
        validate_certs: no
        name: "{{ inventory_hostname }}"
        keys_send:
          - ENTER 

    - name: Copy data.py into guest
      community.vmware.vmware_guest_file_operation:
        hostname: "{{ Target.vCenter.FQDN }}"
        username: "{{ Target.vCenter.User }}"
        password: "{{ Common.Password.Physical }}"
        datacenter: "{{ Target.vCenter.DataCenter }}"
        vm_id: "{{ inventory_hostname }}"
        vm_username: "root"
        vm_password: "{{ Common.Password.VMs }}"
        copy:
          src: templates/data.py
          dest: /etc/httpd/cgi-bin/data.py
          overwrite: true
        validate_certs: false
      delegate_to: localhost

    - name: Copy data.py into guest
      community.vmware.vmware_guest_file_operation:
        hostname: "{{ Target.vCenter.FQDN }}"
        username: "{{ Target.vCenter.User }}"
        password: "{{ Common.Password.Physical }}"
        datacenter: "{{ Target.vCenter.DataCenter }}"
        vm_id: "{{ inventory_hostname }}"
        vm_username: "root"
        vm_password: "{{ Common.Password.VMs }}"
        copy:
          src: templates/clients.db
          dest: /etc/httpd/db/clients.db
          overwrite: true
        validate_certs: false
      delegate_to: localhost
    
    - name: Wait 30 seconds
      ansible.builtin.pause:
        seconds: 30
